{"ast":null,"code":"var _jsxFileName = \"/Users/nicoledow/Development/millennial-moving-solutions-estimator/client/src/containers/FormContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport LocationForm from '../components/LocationForm';\nimport BedroomsForm from '../components/BedroomsForm';\nimport ParkingForm from '../components/ParkingForm';\nimport CustomerContactForm from '../components/CustomerContactForm';\nimport saveData from '../actions/saveData';\n\nclass FormContainer extends React.Component {\n  constructor() {\n    super();\n\n    this.handleData = data => {\n      if (data.startingZip) {\n        this.setState({\n          startingZip: data.startingZip\n        });\n      }\n\n      if (data.destinationZip) {\n        this.setState({\n          destinationZip: data.destinationZip\n        });\n      }\n\n      if (data.numOfBedrooms) {\n        this.setState({\n          numOfBedrooms: data.numOfBedrooms\n        });\n      }\n\n      if (data.numOfFloors) {\n        this.setState({\n          numOfFloors: data.numOfFloors\n        });\n      }\n\n      if (data.elevator) {\n        this.setState({\n          elevator: data.elevator\n        });\n      }\n\n      if (data.parkingDistance) {\n        this.setState({\n          parkingDistance: data.parkingDistance\n        });\n      }\n\n      this.setState(prevState => ({\n        currentStep: prevState.currentStep + 1\n      }));\n    };\n\n    this.completeForm = data => {\n      this.setState({\n        customerName: data.customerName,\n        customerEmail: data.customerEmail,\n        customerPhone: data.customerPhone\n      });\n    };\n\n    this.state = {\n      currentStep: 1,\n      startingZip: '',\n      destinationZip: '',\n      elevator: '',\n      numOfBedrooms: 0,\n      parkingDistance: '',\n      numOfFloors: 0,\n      customerName: '',\n      customerPhone: '',\n      customerEmail: '',\n      formComplete: false\n    };\n  }\n\n  render() {\n    console.log('form container state', this.state);\n\n    switch (this.state.currentStep) {\n      case 1:\n        return React.createElement(LocationForm, {\n          handleData: this.handleData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n\n      case 2:\n        return React.createElement(BedroomsForm, {\n          handleData: this.handleData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n\n      case 3:\n        return React.createElement(ParkingForm, {\n          handleData: this.handleData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n\n      case 4:\n        return React.createElement(CustomerContactForm, {\n          completeForm: this.completeForm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"An error occurred.\");\n    }\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveData: customerInfo => dispatch(saveData(customerInfo))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(FormContainer);","map":{"version":3,"sources":["/Users/nicoledow/Development/millennial-moving-solutions-estimator/client/src/containers/FormContainer.js"],"names":["React","connect","LocationForm","BedroomsForm","ParkingForm","CustomerContactForm","saveData","FormContainer","Component","constructor","handleData","data","startingZip","setState","destinationZip","numOfBedrooms","numOfFloors","elevator","parkingDistance","prevState","currentStep","completeForm","customerName","customerEmail","customerPhone","state","formComplete","render","console","log","mapDispatchToProps","dispatch","customerInfo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport LocationForm from '../components/LocationForm';\nimport BedroomsForm from '../components/BedroomsForm';\nimport ParkingForm from '../components/ParkingForm';\nimport CustomerContactForm from '../components/CustomerContactForm';\nimport saveData from '../actions/saveData';\n\nclass FormContainer extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            currentStep: 1,\n            startingZip: '',\n            destinationZip: '',\n            elevator: '',\n            numOfBedrooms: 0,\n            parkingDistance: '',\n            numOfFloors: 0,\n            customerName: '',\n            customerPhone: '',\n            customerEmail: '',\n            formComplete: false\n        };\n    }\n\n    handleData = data => {\n        if (data.startingZip) {\n            this.setState({ startingZip: data.startingZip });\n        }\n        if (data.destinationZip) {\n            this.setState({ destinationZip: data.destinationZip });\n        }\n        if (data.numOfBedrooms) {\n            this.setState({ numOfBedrooms: data.numOfBedrooms });\n        }\n        if (data.numOfFloors) {\n            this.setState({ numOfFloors: data.numOfFloors });\n        }\n        if (data.elevator) {\n            this.setState({ elevator: data.elevator });\n        }\n        if (data.parkingDistance) {\n            this.setState({ parkingDistance: data.parkingDistance });\n        }\n\n        this.setState(prevState => ({\n            currentStep: prevState.currentStep + 1\n        }));\n    }\n\n    completeForm = data => {\n        this.setState({\n            customerName: data.customerName,\n            customerEmail: data.customerEmail,\n            customerPhone: data.customerPhone\n        })\n    }\n\n    render() {\n        console.log('form container state', this.state)\n\n        switch(this.state.currentStep) {\n            case 1:\n                return <LocationForm handleData={this.handleData} />\n            case 2:\n                return <BedroomsForm handleData={this.handleData} />\n            case 3:\n                return <ParkingForm handleData={this.handleData} />\n            case 4:\n                return <CustomerContactForm completeForm={this.completeForm} />\n            default: \n                return <p>An error occurred.</p>\n            }\n       \n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveData: customerInfo => dispatch(saveData(customerInfo))\n    }\n};\n\nexport default connect(null, mapDispatchToProps)(FormContainer);\n"]},"metadata":{},"sourceType":"module"}