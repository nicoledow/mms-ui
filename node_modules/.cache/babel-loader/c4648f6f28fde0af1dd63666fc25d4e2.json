{"ast":null,"code":"var _jsxFileName = \"/Users/nicoledow/Development/millennial-moving-solutions-estimator/client/src/containers/FormContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport LocationForm from '../components/LocationForm';\nimport BedroomsForm from '../components/BedroomsForm';\nimport ParkingForm from '../components/ParkingForm';\nimport CustomerContactForm from '../components/CustomerContactForm';\nimport saveData from '../actions/saveData';\n\nclass FormContainer extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentStep: 1,\n      startingZip: '',\n      destinationZip: '',\n      elevator: '',\n      numOfBedrooms: 0,\n      parkingDistance: '',\n      numOfFloors: 0,\n      customerName: '',\n      customerPhone: '',\n      customerEmail: '',\n      formComplete: false\n    };\n  } // handleData = data => {\n  //     if (data.startingZip) {\n  //         this.setState({ startingZip: data.startingZip });\n  //     }\n  //     if (data.destinationZip) {\n  //         this.setState({ destinationZip: data.destinationZip });\n  //     }\n  //     if (data.numOfBedrooms) {\n  //         this.setState({ numOfBedrooms: data.numOfBedrooms });\n  //     }\n  //     if (data.numOfFloors) {\n  //         this.setState({ numOfFloors: data.numOfFloors });\n  //     }\n  //     if (data.elevator) {\n  //         this.setState({ elevator: data.elevator });\n  //     }\n  //     if (data.parkingDistance) {\n  //         this.setState({ parkingDistance: data.parkingDistance });\n  //     }\n  //     this.setState(prevState => ({\n  //         currentStep: prevState.currentStep + 1\n  //     }));\n  // }\n  // completeForm = data => {\n  //     this.setState({\n  //         customerName: data.customerName,\n  //         customerEmail: data.customerEmail,\n  //         customerPhone: data.customerPhone\n  //     })\n  // }\n\n\n  render() {\n    console.log('form container props', this.props);\n\n    switch (this.state.currentStep) {\n      case 1:\n        return React.createElement(LocationForm, {\n          saveData: this.props.saveData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        });\n\n      case 2:\n        return React.createElement(BedroomsForm, {\n          saveData: this.props.saveData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        });\n\n      case 3:\n        return React.createElement(ParkingForm, {\n          saveData: this.props.saveData,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        });\n\n      case 4:\n        return React.createElement(CustomerContactForm, {\n          completeForm: this.completeForm,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, \"An error occurred.\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentStep: state.currentStep\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    saveData: customerInfo => dispatch(saveData(customerInfo))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormContainer);","map":{"version":3,"sources":["/Users/nicoledow/Development/millennial-moving-solutions-estimator/client/src/containers/FormContainer.js"],"names":["React","connect","LocationForm","BedroomsForm","ParkingForm","CustomerContactForm","saveData","FormContainer","Component","constructor","state","currentStep","startingZip","destinationZip","elevator","numOfBedrooms","parkingDistance","numOfFloors","customerName","customerPhone","customerEmail","formComplete","render","console","log","props","completeForm","mapStateToProps","mapDispatchToProps","dispatch","customerInfo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,aAAN,SAA4BP,KAAK,CAACQ,SAAlC,CAA4C;AACxCC,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE,CADJ;AAETC,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,cAAc,EAAE,EAHP;AAITC,MAAAA,QAAQ,EAAE,EAJD;AAKTC,MAAAA,aAAa,EAAE,CALN;AAMTC,MAAAA,eAAe,EAAE,EANR;AAOTC,MAAAA,WAAW,EAAE,CAPJ;AAQTC,MAAAA,YAAY,EAAE,EARL;AASTC,MAAAA,aAAa,EAAE,EATN;AAUTC,MAAAA,aAAa,EAAE,EAVN;AAWTC,MAAAA,YAAY,EAAE;AAXL,KAAb;AAaH,GAhBuC,CAkBxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoC,KAAKC,KAAzC;;AAEA,YAAO,KAAKf,KAAL,CAAWC,WAAlB;AACI,WAAK,CAAL;AACI,eAAO,oBAAC,YAAD;AAAc,UAAA,QAAQ,EAAE,KAAKc,KAAL,CAAWnB,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,CAAL;AACI,eAAO,oBAAC,YAAD;AAAc,UAAA,QAAQ,EAAE,KAAKmB,KAAL,CAAWnB,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,CAAL;AACI,eAAO,oBAAC,WAAD;AAAa,UAAA,QAAQ,EAAE,KAAKmB,KAAL,CAAWnB,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ,WAAK,CAAL;AACI,eAAO,oBAAC,mBAAD;AAAqB,UAAA,YAAY,EAAE,KAAKoB,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ;AACI,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAP;AAVR;AAaH;;AAnEuC;;AAsE5C,MAAMC,eAAe,GAAGjB,KAAK,IAAI;AAC7B,SAAO;AAAEC,IAAAA,WAAW,EAAED,KAAK,CAACC;AAArB,GAAP;AACH,CAFD;;AAIA,MAAMiB,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHvB,IAAAA,QAAQ,EAAEwB,YAAY,IAAID,QAAQ,CAACvB,QAAQ,CAACwB,YAAD,CAAT;AAD/B,GAAP;AAGH,CAJD;;AAMA,eAAe7B,OAAO,CAAC0B,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CrB,aAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport LocationForm from '../components/LocationForm';\nimport BedroomsForm from '../components/BedroomsForm';\nimport ParkingForm from '../components/ParkingForm';\nimport CustomerContactForm from '../components/CustomerContactForm';\nimport saveData from '../actions/saveData';\n\nclass FormContainer extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            currentStep: 1,\n            startingZip: '',\n            destinationZip: '',\n            elevator: '',\n            numOfBedrooms: 0,\n            parkingDistance: '',\n            numOfFloors: 0,\n            customerName: '',\n            customerPhone: '',\n            customerEmail: '',\n            formComplete: false\n        };\n    }\n\n    // handleData = data => {\n    //     if (data.startingZip) {\n    //         this.setState({ startingZip: data.startingZip });\n    //     }\n    //     if (data.destinationZip) {\n    //         this.setState({ destinationZip: data.destinationZip });\n    //     }\n    //     if (data.numOfBedrooms) {\n    //         this.setState({ numOfBedrooms: data.numOfBedrooms });\n    //     }\n    //     if (data.numOfFloors) {\n    //         this.setState({ numOfFloors: data.numOfFloors });\n    //     }\n    //     if (data.elevator) {\n    //         this.setState({ elevator: data.elevator });\n    //     }\n    //     if (data.parkingDistance) {\n    //         this.setState({ parkingDistance: data.parkingDistance });\n    //     }\n\n    //     this.setState(prevState => ({\n    //         currentStep: prevState.currentStep + 1\n    //     }));\n    // }\n\n    // completeForm = data => {\n    //     this.setState({\n    //         customerName: data.customerName,\n    //         customerEmail: data.customerEmail,\n    //         customerPhone: data.customerPhone\n    //     })\n    // }\n\n    render() {\n        console.log('form container props', this.props)\n\n        switch(this.state.currentStep) {\n            case 1:\n                return <LocationForm saveData={this.props.saveData} />\n            case 2:\n                return <BedroomsForm saveData={this.props.saveData} />\n            case 3:\n                return <ParkingForm saveData={this.props.saveData} />\n            case 4:\n                return <CustomerContactForm completeForm={this.completeForm} />\n            default: \n                return <p>An error occurred.</p>\n            }\n       \n    }\n}\n\nconst mapStateToProps = state => {\n    return { currentStep: state.currentStep }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        saveData: customerInfo => dispatch(saveData(customerInfo))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormContainer);\n"]},"metadata":{},"sourceType":"module"}