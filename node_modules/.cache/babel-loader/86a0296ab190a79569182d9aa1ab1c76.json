{"ast":null,"code":"const handleInfo = (state = {\n  currentSection: 'Starting Zip Code',\n  formSections: ['Destination Zip Code', 'Number of Bedrooms', 'How many floors?', 'Is there an elevator?', 'Where will the moving truck be able to park?', 'How can Millennial Moving Solutions Contact You?'],\n  currentIndex: 0\n}, action) => {\n  switch (action.type) {\n    case 'ADD_CUSTOMER_INFO':\n      console.log('in reducer', action);\n      console.log('state before changes', state);\n      let nextSection = formSections[state.currentIndex + 1];\n      let infoType = action.formData.infoType;\n      let infoValue = action.formData.data;\n      return 'hello';\n\n    default:\n      return state;\n  }\n};\n\nexport default handleInfo;","map":{"version":3,"sources":["/Users/nicoledow/Development/millennial-moving-solutions-estimator/client/src/reducers/handleInfo.js"],"names":["handleInfo","state","currentSection","formSections","currentIndex","action","type","console","log","nextSection","infoType","formData","infoValue","data"],"mappings":"AAAA,MAAMA,UAAU,GAAG,CAACC,KAAK,GAAG;AAC1BC,EAAAA,cAAc,EAAE,mBADU;AAE1BC,EAAAA,YAAY,EAAE,CAAC,sBAAD,EAAyB,oBAAzB,EAA+C,kBAA/C,EAAmE,uBAAnE,EAA4F,8CAA5F,EAA4I,kDAA5I,CAFY;AAG1BC,EAAAA,YAAY,EAAE;AAHY,CAAT,EAIhBC,MAJgB,KAIL;AACZ,UAAOA,MAAM,CAACC,IAAd;AACA,SAAK,mBAAL;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,MAA1B;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCP,KAApC;AACA,UAAIQ,WAAW,GAAGN,YAAY,CAACF,KAAK,CAACG,YAAN,GAAqB,CAAtB,CAA9B;AACA,UAAIM,QAAQ,GAAGL,MAAM,CAACM,QAAP,CAAgBD,QAA/B;AACA,UAAIE,SAAS,GAAGP,MAAM,CAACM,QAAP,CAAgBE,IAAhC;AACA,aAAO,OAAP;;AACF;AACE,aAAOZ,KAAP;AATF;AAWD,CAhBD;;AAkBA,eAAeD,UAAf","sourcesContent":["const handleInfo = (state = { \n  currentSection: 'Starting Zip Code', \n  formSections: ['Destination Zip Code', 'Number of Bedrooms', 'How many floors?', 'Is there an elevator?', 'Where will the moving truck be able to park?', 'How can Millennial Moving Solutions Contact You?'],\n  currentIndex: 0\n}, action) => {\n  switch(action.type){\n  case 'ADD_CUSTOMER_INFO':\n    console.log('in reducer', action)\n    console.log('state before changes', state)\n    let nextSection = formSections[state.currentIndex + 1];\n    let infoType = action.formData.infoType;\n    let infoValue = action.formData.data;\n    return 'hello'\n  default:\n    return state;\n  }\n};\n\nexport default handleInfo;"]},"metadata":{},"sourceType":"module"}