{"ast":null,"code":"import BASE_URL from '../index';\n\nconst getEstimate = data => {\n  return dispatch => {\n    dispatch({\n      type: 'START_POSTING_CUSTOMER_INFO'\n    });\n    fetch(`${BASE_URL}/estimates`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      debugger;\n      dispatch({\n        type: 'QUOTE_GENERATED',\n        quote: data.quote\n      });\n    }).catch(err => console.log('error in getEstimate', err));\n  };\n};\n\nexport default getEstimate;","map":{"version":3,"sources":["/Users/nicoledow/Development/millennial-moving-solutions-estimator/client/src/actions/getEstimate.js"],"names":["BASE_URL","getEstimate","data","dispatch","type","fetch","method","headers","body","JSON","stringify","then","response","json","quote","catch","err","console","log"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;;AAEA,MAAMC,WAAW,GAAGC,IAAI,IAAI;AACxB,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AAEAC,IAAAA,KAAK,CAAE,GAAEL,QAAS,YAAb,EAA0B;AAC3BM,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB,OAFkB;AAG3BC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf;AAHqB,KAA1B,CAAL,CAKCS,IALD,CAKMC,QAAQ,IAAG;AACb,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,KAPD,EAQCF,IARD,CAQMT,IAAI,IAAI;AACV;AACAC,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,iBAAR;AAA2BU,QAAAA,KAAK,EAAEZ,IAAI,CAACY;AAAvC,OAAD,CAAR;AACH,KAXD,EAYCC,KAZD,CAYOC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,GAApC,CAZd;AAaH,GAhBD;AAiBH,CAlBD;;AAmBA,eAAef,WAAf","sourcesContent":["import BASE_URL from '../index';\n\nconst getEstimate = data => {\n    return (dispatch) => {\n        dispatch({ type: 'START_POSTING_CUSTOMER_INFO' })\n\n        fetch(`${BASE_URL}/estimates`, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify(data)\n        })\n        .then(response =>{\n            return response.json();\n        })\n        .then(data => {\n            debugger;\n            dispatch({ type: 'QUOTE_GENERATED', quote: data.quote })\n        })\n        .catch(err => console.log('error in getEstimate', err));\n    }\n}\nexport default getEstimate;\n"]},"metadata":{},"sourceType":"module"}