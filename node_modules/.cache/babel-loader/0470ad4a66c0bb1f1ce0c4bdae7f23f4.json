{"ast":null,"code":"var _jsxFileName = \"/Users/nicoledow/Development/millennial-moving-solutions-estimator/client/src/components/Form.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport TextFieldForm from './TextFieldForm';\nimport submitForm from '../actions/submitForm';\n\nclass Form extends React.Component {\n  constructor() {\n    super();\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let formData = {\n        infoType: this.props.currentSection,\n        data: this.state.formValue\n      };\n      console.log('formData in handleSubmit', formData);\n      this.props.submitForm(formData);\n    };\n\n    this.state = {\n      formValue: ''\n    };\n  }\n\n  render() {\n    switch (this.props.currentSection) {\n      case 'Starting Zip Code':\n      case 'Destination Zip Code':\n        return React.createElement(TextFieldForm, {\n          currentSection: this.props.currentSection,\n          handleSubmit: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n\n      default:\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"An error occurred. Please try again.\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentSection: state.currentSection\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    submitForm: formData => dispatch(submitForm(formData))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);","map":{"version":3,"sources":["/Users/nicoledow/Development/millennial-moving-solutions-estimator/client/src/components/Form.js"],"names":["React","connect","TextFieldForm","submitForm","Form","Component","constructor","handleSubmit","e","preventDefault","formData","infoType","props","currentSection","data","state","formValue","console","log","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,MAAMC,IAAN,SAAmBJ,KAAK,CAACK,SAAzB,CAAmC;AAC/BC,EAAAA,WAAW,GAAG;AACV;;AADU,SAOdC,YAPc,GAOCC,CAAC,IAAI;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACA,UAAIC,QAAQ,GAAG;AACXC,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,cADV;AAEXC,QAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWC;AAFN,OAAf;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCR,QAAxC;AACA,WAAKE,KAAL,CAAWT,UAAX,CAAsBO,QAAtB;AACF,KAfa;;AAEV,SAAKK,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAGH;;AAaDG,EAAAA,MAAM,GAAG;AACL,YAAO,KAAKP,KAAL,CAAWC,cAAlB;AACI,WAAK,mBAAL;AACA,WAAK,sBAAL;AACI,eAAO,oBAAC,aAAD;AAAe,UAAA,cAAc,EAAE,KAAKD,KAAL,CAAWC,cAA1C;AAA0D,UAAA,YAAY,EAAE,KAAKN,YAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;;AACJ;AACI,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAAP;AALR;AAOH;;AA3B8B;;AA8BnC,MAAMa,eAAe,GAAGL,KAAK,IAAI;AAC7B,SAAO;AAAEF,IAAAA,cAAc,EAAEE,KAAK,CAACF;AAAxB,GAAP;AACH,CAFD;;AAIA,MAAMQ,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHnB,IAAAA,UAAU,EAAEO,QAAQ,IAAIY,QAAQ,CAACnB,UAAU,CAACO,QAAD,CAAX;AAD7B,GAAP;AAGH,CAJD;;AAMA,eAAeT,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CjB,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport TextFieldForm from './TextFieldForm';\nimport submitForm from '../actions/submitForm';\n\nclass Form extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            formValue: ''\n        }\n    }\n\n    handleSubmit = e => {\n       e.preventDefault();\n       let formData = {\n           infoType: this.props.currentSection,\n           data: this.state.formValue\n       };\n       console.log('formData in handleSubmit', formData);\n       this.props.submitForm(formData);\n    }\n\n\n    render() {\n        switch(this.props.currentSection) {\n            case 'Starting Zip Code':\n            case 'Destination Zip Code':\n                return <TextFieldForm currentSection={this.props.currentSection} handleSubmit={this.handleSubmit} />\n            default:\n                return <p>An error occurred. Please try again.</p>;\n        }\n    }\n}\n\nconst mapStateToProps = state => {\n    return { currentSection: state.currentSection }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        submitForm: formData => dispatch(submitForm(formData))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);"]},"metadata":{},"sourceType":"module"}