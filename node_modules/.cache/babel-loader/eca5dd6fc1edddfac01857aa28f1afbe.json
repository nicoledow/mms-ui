{"ast":null,"code":"import _objectSpread from \"/Users/nicoledow/Development/millennial-moving-solutions-estimator/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nexport default function handleInfo(state = {\n  next: 'location'\n}, action) {\n  //debugger;\n  switch (action.type) {\n    case 'ADD_LOCATION_DATA':\n      return {\n        startingZip: action.startingZip,\n        destinationZip: action.destinationZip,\n        next: 'bedrooms'\n      };\n\n    case 'ADD_BEDROOM_ELEVATOR_INFO':\n      return _objectSpread({}, state, {\n        numOfBedrooms: action.numOfBedrooms,\n        numOfFloors: action.numOfFloors,\n        elevator: action.elevator,\n        next: 'parking'\n      });\n\n    case 'ADD_PARKING_INFO':\n      let newState = _objectSpread({}, state, {\n        parkingDistance: action.parkingDistance,\n        next: 'contact'\n      });\n\n      console.log('newstate', newState);\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["/Users/nicoledow/Development/millennial-moving-solutions-estimator/client/src/reducers/handleInfo.js"],"names":["handleInfo","state","next","action","type","startingZip","destinationZip","numOfBedrooms","numOfFloors","elevator","newState","parkingDistance","console","log"],"mappings":";AAAA,eAAe,SAASA,UAAT,CAAoBC,KAAK,GAAG;AAAEC,EAAAA,IAAI,EAAE;AAAR,CAA5B,EAAkDC,MAAlD,EAA0D;AACrE;AACA,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,mBAAL;AACI,aAAO;AAACC,QAAAA,WAAW,EAAEF,MAAM,CAACE,WAArB;AAAkCC,QAAAA,cAAc,EAAEH,MAAM,CAACG,cAAzD;AAAyEJ,QAAAA,IAAI,EAAE;AAA/E,OAAP;;AACJ,SAAK,2BAAL;AACI,+BAAWD,KAAX;AAAkBM,QAAAA,aAAa,EAAEJ,MAAM,CAACI,aAAxC;AAAuDC,QAAAA,WAAW,EAAEL,MAAM,CAACK,WAA3E;AAAwFC,QAAAA,QAAQ,EAAEN,MAAM,CAACM,QAAzG;AAAmHP,QAAAA,IAAI,EAAE;AAAzH;;AACJ,SAAK,kBAAL;AACI,UAAIQ,QAAQ,qBAAOT,KAAP;AAAcU,QAAAA,eAAe,EAAER,MAAM,CAACQ,eAAtC;AAAuDT,QAAAA,IAAI,EAAE;AAA7D,QAAZ;;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,QAAxB;;AACJ;AACI,aAAOT,KAAP;AATR;AAWH;AAAA","sourcesContent":["export default function handleInfo(state = { next: 'location' }, action) {\n    //debugger;\n    switch(action.type) {\n        case 'ADD_LOCATION_DATA':\n            return {startingZip: action.startingZip, destinationZip: action.destinationZip, next: 'bedrooms'}\n        case 'ADD_BEDROOM_ELEVATOR_INFO':\n            return {...state, numOfBedrooms: action.numOfBedrooms, numOfFloors: action.numOfFloors, elevator: action.elevator, next: 'parking'};\n        case 'ADD_PARKING_INFO':\n            let newState = {...state, parkingDistance: action.parkingDistance, next: 'contact'}\n            console.log('newstate', newState);\n        default:\n            return state;\n    }\n};"]},"metadata":{},"sourceType":"module"}